# -*- coding: utf-8 -*-
"""Fundamentos de Processamento de Imagens Digitais.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-6QP6ONQy1TgJhtV4lFfVmk3YQcSwsNQ

#### Importando bibliotecas
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from skimage.io import imread, imshow
from skimage.filters import prewitt_h,prewitt_v

"""#### 1ª Imagem a ser trabalhada (Preto e Branco)"""

image = imread('pct.png', as_gray = True)
imshow(image)

image.shape #dimensões de imagem

image #formato matricial (cada elemento corresponde a um pixel)

"""#### Remodelando a matriz"""

features = np.reshape(image, (3240*3240)) #transformando a matriz em unidimensional

features.shape

features

"""#### 2ª Imagem a ser trabalhada (Colorida)"""

image2 = imread('ufopa0.png')
imshow(image2)

image2 #VERIFICAR

"""#### Criando matriz preenchida por zeros de mesma dimensão"""

feature_matrix=np.zeros((3240, 3240))

feature_matrix.shape

"""#### Substituindo os zeros pelos novos valores dos pixels"""

#valor médio dos canais (RBG)
for i in range(0, image2.shape[0]):
  for j in range(0, image2.shape[1]):
    feature_matrix[i][j] = ((int(image2[i,j,0]) + int(image2[i,j,1]) + int(image2[i,j,2]))/3)
  
feature_matrix

image2.shape

"""#### Remodelando a matriz"""

features0 = np.reshape(feature_matrix, (3240*3240)) #transformando a matriz em unidimensional

features0

"""#### Extraindo recursos de borda"""

flash = imread("flash.PNG", as_gray=True)
flash

edges_prewitt_horizontal = prewitt_h(flash)
edges_prewitt_vertical = prewitt_v(flash)

imshow(edges_prewitt_horizontal, cmap = 'gray')

imshow(edges_prewitt_vertical, cmap = 'gray')